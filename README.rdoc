= yodlee_api

Future url here

== Description:

Soap client for the Yodlee API. Supports version 10.2.

== Installation:

Gemfile
 gem 'yodlee_api', :git => "git@github.com:OtoAnalytics/yodlee_api.git"

== QuickStart Guide:


1) create a global config and put it somewhere like config/environment.rb

 YodleeApi.configure do |config| 
   config.application_id = "APP_ID" 
   config.cobrand_id = "COBRAND_ID"
   config.cobrand_login = "COBRAND_USERNAME"
   config.cobrand_password = "COBRAND_PASSWORD"
   config.locale = {:country => "US", :language => "en"} # optional
   config.tnc_version = 1 # optional
   config.endpoint = "https://some/endpoint/here"
 end
 
2) Create a client 
 $ client = YodleeApi::CobrandLogin.new

3)  Login to the CobrandLoginService
 $ client.login


If you don't have a global config, then you need to specify credentials and your endpoint. All fields are required unless commented as optional
 $ credentials = YodleeApi::CobrandCredentials.new(
   :cobrand_id => "YOUR_COBRAND_ID",
   :application_id => "YOUR_APPLICATION_ID",
   :cobrand_login => "YOUR_COBRAND_USERNAME",
   :cobrand_password => "YOUR_COBRAND_PASSWORD",
   :locale => = {:country => "US", :language => "en"}, # optional
   :tnc_version => 1 # optional
 )

 $ endpoint = "https://some/endpoint/here"
 $ client = YodleeApi::CobrandLogin.new(endpoint, credentials)
 $ client.login


4) Create user credentials
 $ user_creds = YodleeApi::UserCredentials.new(:email => "foo@bar.com", :login_name => "foobarone", :password => "foobartwo1")

5) Register the user
 $ user = YodleeApi::UserRegistration.new(client.cobrand_context, user_creds)
 $ user.register

6) Create a content service request to get the list of supported sites and their login forms
 $ service = YodleeApi::ContentServices.new(:cobrand_context => client.cobrand_context, :container_types => "bank")
 # you can also specify an array of container_types, see YodleeApi::ContentServices::SupportedContainerTypes for a list of valid types
 $ services = YodleeApi::ContentServices.new(:cobrand_context => client.cobrand_context, :container_types => ["bank", "credit_card"])

 # Fetch the sites list
 $ service.get_content_services

7) Access the sites list. The sites will be stored an array of hashes with keys :content_service_id, :site_name, :organization_name & :login_form
 
 service.sites.first
  => {
        :content_service_id=>"566", 
        :site_name=>"1st Advantage Federal Credit Union", 
        :organiztion_name=>"1st Advantage FCU - Member Portfolio View", 
        :login_form => [
          [{"name"=>"LOGIN"}, {"displayName"=>"User ID"}, {"isEditable"=>"true"}, {"isOptional"=>"false"}, {"isEscaped"=>"false"}, {"isOptionalMFA"=>"false"}, {"isMFA"=>"false"}, {"valueIdentifier"=>"LOGIN"}, {"valueMask"=>"LOGIN_FIELD"}, {"fieldType"=>"LOGIN"}, {"size"=>"20"}, {"maxlength"=>"40"}, {"fieldErrorCode"=>""}],
          [{"name"=>"PASSWORD"}, {"displayName"=>"Password"}, {"isEditable"=>"true"}, {"isOptional"=>"false"}, {"isEscaped"=>"false"}, {"isOptionalMFA"=>"false"}, {"isMFA"=>"false"}, {"valueIdentifier"=>"PASSWORD"}, {"valueMask"=>"LOGIN_FIELD"}, {"fieldType"=>"PASSWORD"}, {"size"=>"20"}, {"maxlength"=>"40"}, {"fieldErrorCode"=>""}]
        ]
      }
 
	
== Dependencies:

 savon, '>= 0.9.6'
 ruby 1.9.2 (hashes in 1.8.7 don't store element order and that will cause all sorts of havoc)


== LICENSE:

Coming Soon.